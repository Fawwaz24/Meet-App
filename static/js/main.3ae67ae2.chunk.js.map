{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showHideDetails","handleShowHideButton","_this","setState","_this2","this","event","props","react_default","a","createElement","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","key","id","src_Event","CitySearch","query","suggestions","showSuggestions","handleItemClicked","suggestion","updateEvents","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","type","onChange","onFocus","style","display","NumberOfEvents","eventCount","handleEventInputChanged","htmlFor","name","placeholder","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Object","toConsumableArray","Set","getAccessToken","_ref","asyncToGenerator","regenerator_default","mark","_callee","accessToken","tokenCheck","searchParams","code","results","authUrl","wrap","_context","prev","next","localStorage","getItem","t0","checkToken","sent","error","removeItem","URLSearchParams","window","search","get","axios","data","abrupt","getToken","stop","apply","arguments","_ref2","_callee2","result","_context2","fetch","concat","then","res","json","catch","_x","getEvents","_ref3","_callee3","token","url","_context3","NProgress","startsWith","done","removeQuery","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","_ref4","_callee4","encodeCode","_yield$fetch$then$cat","access_token","_context4","encodeURIComponent","_x2","App","locationEvents","console","log","slice","mounted","src_CitySearch","src_NumberOfEvents","src_EventList","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","atatus","install"],"mappings":"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","file":"static/js/main.3ae67ae2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n\n    state = {\n        showHideDetails: false,\n    };\n\n    handleShowHideButton = () => {\n        if (this.state.showHideDetails === true) {\n            this.setState({ showHideDetails: false });\n        } else {\n            this.setState({ showHideDetails: true });\n        }\n    };\n\n    render() {\n\n        const { event } = this.props;\n\n        return (\n            <div className='event-container'>\n                <h1 className='name'>{event.summary}</h1>\n                <p>{event.start ? event.start.dateTime : ''}</p>\n                <p className='locations'>{event.location}</p>\n\n                {this.state.showHideDetails && (\n                    <div className='event-details'>\n                        <h2>About event:</h2>\n                        <a href={event.htmlLink}>See Details on Google Calendar</a>\n                        <p>{event.description}</p>\n                    </div>\n                )}\n\n                <button\n                    className='show-hide-btn'\n                    onClick={() => this.handleShowHideButton()}\n                >\n                    {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\n                </button>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: false,\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false,\n        });\n\n        this.props.updateEvents(suggestion, 0);\n    };\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions: suggestions,\n        });\n    };\n\n    render() {\n        return (\n            <div className='CitySearch'>\n                <input\n                    type='text'\n                    className='city'\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => {\n                        this.setState({ showSuggestions: true });\n                    }}\n                />\n                <ul\n                    className='suggestions'\n                    style={this.state.showSuggestions ? {} : { display: 'none' }}\n                >\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >\n                            {suggestion}\n                        </li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked('all')}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n\n    }\n\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        eventCount: this.props.eventCount,\n    };\n\n    handleEventInputChanged = (event) => {\n        const eventCount = event.target.value;\n        this.setState({\n            eventCount,\n        });\n        this.props.updateEvents('', eventCount);\n    };\n\n    render() {\n        return (\n            <div className='event-number'>\n                <label htmlFor='numberOfEvent'>Number of Events</label>\n                <input\n                    type='number'\n                    name='numberOfEvent'\n                    className='event-number-input'\n                    placeholder='Enter Number of Events'\n                    value={this.state.eventCount}\n                    onChange={this.handleEventInputChanged}\n                />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    }\n];\n\nexport { mockData };","/**\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport './nprogress.css';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nexport const extractEvents = (events) => {\n    var extractEvents = events.map((event) => event);\n    var events1 = [...new Set(extractEvents)];\n    return events1;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem('access_token');\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get('code');\n        if (!code) {\n            const results = await axios.get(\n                'https://uk7va9qad1.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url'\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith('http://localhost')) {\n        NProgress.done();\n        return mockData;\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://uk7va9qad1.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\n            localStorage.setItem('locations', JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            '//' +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState('', '', newurl);\n    } else {\n        newurl = window.location.protocol + '//' + window.location.host;\n        window.history.pushState('', '', newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://uk7va9qad1.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem('access_token', access_token);\n\n    return access_token;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 32\n  };\n\n  updateEvents = (location, eventCount) => {\n    let locationEvents;\n    getEvents().then((events) => {\n      locationEvents = events;\n      if (location === 'all' && eventCount === 0) {\n        locationEvents = events;\n      } else if (location !== 'all' && eventCount === 0) {\n        locationEvents = events.filter((event) => event.location === location);\n        console.log(eventCount);\n      } else if (location === '' && eventCount > 0) {\n        locationEvents = events.slice(0, eventCount);\n      }\n      this.setState({\n        events: locationEvents,\n        eventCount,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.eventCount),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n          eventCount={this.state.eventCount}\n        />\n        <NumberOfEvents\n          eventCount={this.state.eventCount}\n          updateEvents={this.updateEvents}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('51fb79342be84d2097f3efc11ef8c545').install();"],"sourceRoot":""}